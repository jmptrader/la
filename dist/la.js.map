{"version":3,"sources":["_version.ts","ellipse.ts","EPSILON.ts","mat3.ts","vec2.ts","rect.ts"],"names":["la","la.ellipse","la.ellipse.flatTangentAngles","la.ellipse.normalizeAngle","la.ellipse.x","la.ellipse.y","la.ellipse.point","la.ellipse.normal","la.ellipse.tangent","la.ellipse.extrema","la.mat3","la.mat3.create","la.mat3.copyTo","la.mat3.init","la.mat3.identity","la.mat3.equal","la.mat3.multiply","la.mat3.inverse","la.mat3.transformVec2","la.mat3.transformVec2s","la.mat3.createTranslate","la.mat3.translate","la.mat3.createScale","la.mat3.scale","la.mat3.createRotate","la.mat3.createSkew","la.mat3.preapply","la.mat3.apply","la.mat3.simple_inverse","la.mat3.complex_inverse","la.vec2","la.vec2.create","la.vec2.init","la.vec2.clone","la.vec2.reverse","la.vec2.orthogonal","la.vec2.normalize","la.vec2.rotate","la.vec2.midpoint","la.vec2.angleBetween","la.vec2.isClockwiseTo","la.vec2.intersection","la.rect","la.rect.init","la.rect.copyTo","la.rect.transform","la.rect.equal","la.rect.isEmpty","la.rect.union","la.rect.intersection","la.rect.isContainedIn","la.rect.containsPoint","la.rect.roundOut","la.rect.roundIn"],"mappings":"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DA,gBAAuBA,GAAiBA,EAAEA,IAAkBA;YACxDE,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA;YACjBA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA;YACjBA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA;YACjBA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA;YACjBA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA;YACjBA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA;YACjBA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QAReF,WAAMA,SAQrBA,CAAAA;QAEDA,cAAqBA,IAAkBA,EAAEA,GAAWA,EAAEA,GAAWA,EAAEA,GAAWA,EAAEA,GAAWA,EAAEA,EAAUA,EAAEA,EAAUA;YAC/GG,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA;YACdA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA;YACdA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA;YACdA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA;YACdA,IAAIA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA;YACbA,IAAIA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA;YACbA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QAReH,SAAIA,OAQnBA,CAAAA;QAEDA,kBAAyBA,IAAmBA;YACxCI,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA;gBAACA,IAAIA,GAAGA,MAAMA,EAAEA,CAACA;YAC3BA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QATeJ,aAAQA,WASvBA,CAAAA;QAEDA,eAAsBA,CAAeA,EAAEA,CAAeA;YAClDK,MAAMA,CAACA,CAACA,KAAKA,CAACA,IAAIA,CACVA,IAAIA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,UAAOA;gBAC/BA,IAAIA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,UAAOA;gBAC/BA,IAAIA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,UAAOA;gBAC/BA,IAAIA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,UAAOA;gBAC/BA,IAAIA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,UAAOA;gBAC/BA,IAAIA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,UAAOA,CAClCA,CAACA;QACVA,CAACA;QATeL,UAAKA,QASpBA,CAAAA;QAGDA,kBAAyBA,CAAeA,EAAEA,CAAeA,EAAEA,IAAmBA;YAC1EM,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA;gBAACA,IAAIA,GAAGA,CAACA,CAACA;YACpBA,IAAIA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA,EAAEA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA,EACtBA,GAAGA,GAAGA,CAACA,CAACA,CAAC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A,IAAmBA;YACrEU,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA;gBAACA,IAAIA,GAAGA,MAAMA,EAAEA,CAACA;YAC3BA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QATeV,oBAAeA,kBAS9BA,CAAAA;QAEDA,mBAA0BA,GAAiBA,EAAEA,CAASA,EAAEA,CAASA;YAC7DW,GAAGA,CAACA,CAACA,CAACA,IAAIA,CAACA,CAACA;YACZA,GAAGA,CAACA,CAACA,CAACA,IAAIA,CAACA,CAACA;YACZA,MAAMA,CAACA,GAAGA,CAACA;QACfA,CAACA;QAJeX,cAASA,YAIxBA,CAAAA;QAEDA,qBAA4BA,EAAUA,EAAEA,EAAUA,EAAEA,IAAmBA;YACnEY,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA;gBAACA,IAAIA,GAAGA,MAAMA,EAAEA,CAACA;YAC3BA,IAAIA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA;YACbA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA;YACbA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QATeZ,gBAAWA,cAS1BA,CAAAA;QAEDA,eAAsBA,GAAiBA,EAAEA,EAAUA,EAAEA,EAAUA;YAC3Da,GAAGA,CAACA,CAACA,CAACA,IAAIA,EAAEA,CAACA;YACbA,GAAGA,CAACA,CAACA,CAACA,IAAIA,EAAEA,CAACA;YACbA,GAAGA,CAACA,CAACA,CAACA,IAAIA,EAAEA,CAACA;YAEbA,GAAGA,CAACA,CAACA,CAACA,IAAIA,EAAEA,CAACA;YACbA,GAAGA,CAACA,CAACA,CAACA,IAAIA,EAAEA,CAACA;YACbA,GAAGA,CAACA,CAACA,CAACA,IAAIA,EAAEA,CAACA;YACbA,MAAMA,CAACA,GAAGA,CAACA;QACfA,CAACA;QATeb,UAAKA,QASpBA,CAAAA;QAEDA,sBAA6BA,QAAgBA,EAAEA,IAAmBA;YAC9Dc,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA;gBAACA,IAAIA,GAAGA,MAAMA,EAAEA,CAACA;YAC3BA,IAAIA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,QAAQA,CAACA,CAACA;YAC3BA,IAAIA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,QAAQA,CAACA,CAACA;YAC3BA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;YACbA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QAXed,iBAAYA,eAW3BA,CAAAA;QAEDA,oBAA2BA,SAAiBA,EAAEA,SAAiBA,EAAEA,IAAmBA;YAChFe,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA;gBAACA,IAAIA,GAAGA,MAAMA,EAAEA,CAACA;YAC3BA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,SAASA,CAACA,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,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,KAAKA,EAAEA,CAACA,EAAEA,MAAMA,EAAEA,CAACA,EAACA,CAACA;YAEpDA,IAAIA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;YACdA,IAAIA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;YACdA,IAAIA,CAACA,GAAGA,GAAGA,CAACA,KAAKA,CAACA;YAClBA,IAAIA,CAACA,GAAGA,GAAGA,CAACA,MAAMA,CAACA;YAEnBA,OAAIA,CAACA,IAAIA,CAACA,CAACA,EAAEA,CAACA,EAAEA,EAAEA,CAACA,CAACA;YACpBA,OAAIA,CAACA,IAAIA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA,EAAEA,EAAEA,CAACA,CAACA;YACxBA,OAAIA,CAACA,IAAIA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,CAACA,EAAEA,EAAEA,CAACA,CAACA;YAC5BA,OAAIA,CAACA,IAAIA,CAACA,CAACA,EAAEA,CAACA,GAAGA,CAACA,EAAEA,EAAEA,CAACA,CAACA;YAExBA,OAAIA,CAACA,aAAaA,CAACA,SAASA,EAAEA,EAAEA,CAACA,CAACA;YAClCA,OAAIA,CAACA,aAAaA,CAACA,SAASA,EAAEA,EAAEA,CAACA,CAACA;YAClCA,OAAIA,CAACA,aAAaA,CAACA,SAASA,EAAEA,EAAEA,CAACA,CAACA;YAClCA,OAAIA,CAACA,aAAaA,CAACA,SAASA,EAAEA,EAAEA,CAACA,CAACA;YAElCA,IAAIA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,EAAEA,CAACA,CAACA,CAACA,EAAEA,EAAEA,CAACA,CAACA,CAACA,EAAEA,EAAEA,CAACA,CAACA,CAACA,EAAEA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA;YAC7CA,IAAIA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,EAAEA,CAACA,CAACA,CAACA,EAAEA,EAAEA,CAACA,CAACA,CAACA,EAAEA,EAAEA,CAACA,CAACA,CAACA,EAAEA,EAAEA,CAACA,CAACA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","file":"la.js","sourcesContent":["module la {\r\n    export var version = '0.1.3';\r\n}","namespace la {\n    var PI2 = 2 * Math.PI;\n    var PI1_2 = Math.PI / 2;\n\n    export interface IEllipse {\n        cx: number;\n        cy: number;\n        rx: number;\n        ry: number;\n        phi: number;\n        x(theta: number): number;\n        y(theta: number): number;\n        point(theta: number): Float32Array;\n        normal(theta: number): Float32Array;\n        tangent(theta: number): Float32Array;\n        /// Find ellipse extrema within arc defined by [start angle, end angle] sweeping anti-clockwise/clockwise\n        extrema(sa: number, ea: number, ac: boolean): Float32Array[];\n    }\n    export function ellipse(cx: number, cy: number, rx: number, ry: number, phi: number): IEllipse {\n        var sphi = Math.sin(phi);\n        var cphi = Math.cos(phi);\n\n        var da = rx * cphi;\n        var db = -ry * sphi;\n        var dc = rx * sphi;\n        var dd = ry * cphi;\n\n        function flatTangentAngles(): number[] {\n            // vertical tangent [tan(theta) = b/a]\n            // 2 angles on opposite side of ellipse\n            var va1 = Math.atan2(db, da);\n            if (va1 < 0)\n                va1 += PI2;\n            var va2 = va1 >= Math.PI ? va1 - Math.PI : va1 + Math.PI;\n\n            // horizontal tangent [tan(theta) = d/c]\n            // 2 angles on opposite side of ellipse\n            var ha1 = Math.atan2(dd, dc);\n            if (ha1 < 0)\n                ha1 += PI2;\n            var ha2 = ha1 >= Math.PI ? ha1 - Math.PI : ha1 + Math.PI;\n\n            return [va1, va2, ha1, ha2];\n        }\n\n        function normalizeAngle(angle: number): number {\n            angle = angle % PI2;\n            if (angle < 0)\n                angle += PI2;\n            return angle;\n        }\n\n        var e = {\n            cx: cx,\n            cy: cy,\n            rx: rx,\n            ry: ry,\n            phi: phi,\n            x(theta: number): number {\n                var stheta = Math.sin(theta);\n                var ctheta = Math.cos(theta);\n                return (cphi * rx * ctheta) + (-sphi * ry * stheta) + cx;\n            },\n            y(theta: number): number {\n                var stheta = Math.sin(theta);\n                var ctheta = Math.cos(theta);\n                return (sphi * rx * ctheta) + (cphi * ry * stheta) + cy;\n            },\n            point(theta: number): Float32Array {\n                return vec2.create(e.x(theta), e.y(theta));\n            },\n            normal(theta: number): Float32Array {\n                return vec2.rotate(e.tangent(theta), -PI1_2);\n            },\n            tangent(theta: number): Float32Array {\n                var stheta = Math.sin(theta);\n                var ctheta = Math.cos(theta);\n                return vec2.create(\n                    (-da * stheta) + (db * ctheta),\n                    (-dc * stheta) + (dd * ctheta)\n                );\n            },\n            extrema(sa: number, ea: number, ac: boolean): Float32Array[] {\n                var sa = normalizeAngle(sa);\n                var ea = normalizeAngle(ea);\n\n                var isContained: (theta: number) => boolean;\n                if (sa < ea) {\n                    if (ac === true) {\n                        isContained = (theta) => (0 <= theta && theta <= sa) || (ea <= theta && theta <= PI2);\n                    } else {\n                        isContained = (theta) => sa <= theta && theta <= ea;\n                    }\n                } else {\n                    if (ac === true) {\n                        isContained = (theta) => ea <= theta && theta <= sa;\n                    } else {\n                        isContained = (theta) => (0 <= theta && theta <= ea) || (sa <= theta && theta <= PI2);\n                    }\n                }\n\n                var [va1, va2, ha1, ha2] = flatTangentAngles();\n                var ext = [];\n                if (isContained(va1))\n                    ext.push(e.point(va1));\n                if (isContained(va2))\n                    ext.push(e.point(va2));\n                if (isContained(ha1))\n                    ext.push(e.point(ha1));\n                if (isContained(ha2))\n                    ext.push(e.point(ha2));\n                return ext;\n            }\n        };\n        return e;\n    }\n}\n","namespace la {\r\n    export var EPSILON = 1E-6;\r\n}","namespace la.mat3 {\n    /// NOTE:\n    ///     Row-major order\n    ///     [m11, m12, m21, m22, x0, y0]\n    export function create(src?: number[]|Float32Array): Float32Array {\n        var dest = new Float32Array(6);\n\n        if (src) {\n            dest[0] = src[0];\n            dest[1] = src[1];\n            dest[2] = src[2];\n            dest[3] = src[3];\n            dest[4] = src[4];\n            dest[5] = src[5];\n        } else {\n            dest[0] = dest[1] = dest[2] = dest[3] = dest[4] = dest[5] = 0;\n        }\n\n        return dest;\n    }\n\n    export function copyTo(src: Float32Array, dest: Float32Array): Float32Array {\n        dest[0] = src[0];\n        dest[1] = src[1];\n        dest[2] = src[2];\n        dest[3] = src[3];\n        dest[4] = src[4];\n        dest[5] = src[5];\n        return dest;\n    }\n\n    export function init(dest: Float32Array, m11: number, m12: number, m21: number, m22: number, x0: number, y0: number): Float32Array {\n        dest[0] = m11;\n        dest[1] = m12;\n        dest[2] = m21;\n        dest[3] = m22;\n        dest[4] = x0;\n        dest[5] = y0;\n        return dest;\n    }\n\n    export function identity(dest?: Float32Array): Float32Array {\n        if (!dest) dest = create();\n        dest[0] = 1;\n        dest[1] = 0;\n        dest[2] = 0;\n        dest[3] = 1;\n        dest[4] = 0;\n        dest[5] = 0;\n        return dest;\n    }\n\n    export function equal(a: Float32Array, b: Float32Array): boolean {\n        return a === b || (\n                Math.abs(a[0] - b[0]) < EPSILON &&\n                Math.abs(a[1] - b[1]) < EPSILON &&\n                Math.abs(a[2] - b[2]) < EPSILON &&\n                Math.abs(a[3] - b[3]) < EPSILON &&\n                Math.abs(a[4] - b[4]) < EPSILON &&\n                Math.abs(a[5] - b[5]) < EPSILON\n            );\n    }\n\n    // dest = a * b\n    export function multiply(a: Float32Array, b: Float32Array, dest?: Float32Array): Float32Array {\n        if (!dest) dest = a;\n        var a11 = a[0], a12 = a[1],\n            a21 = a[2], a22 = a[3],\n            ax0 = a[4], ay0 = a[5],\n            b11 = b[0], b12 = b[1],\n            b21 = b[2], b22 = b[3],\n            bx0 = b[4], by0 = b[5];\n\n        dest[0] = a11 * b11 + a12 * b21;\n        dest[1] = a11 * b12 + a12 * b22;\n\n        dest[2] = a21 * b11 + a22 * b21;\n        dest[3] = a21 * b12 + a22 * b22;\n\n        dest[4] = a11 * bx0 + a12 * by0 + ax0;\n        dest[5] = a21 * bx0 + a22 * by0 + ay0;\n\n        return dest;\n    }\n\n    export function inverse(mat: Float32Array, dest?: Float32Array): Float32Array {\n        if (Math.abs(mat[1]) < EPSILON && Math.abs(mat[2]) < EPSILON) //Simple scaling/translation matrix\n            return simple_inverse(mat, dest);\n        else\n            return complex_inverse(mat, dest);\n    }\n\n    export function transformVec2(mat: Float32Array, vec: Float32Array, dest?: Float32Array): Float32Array {\n        if (!dest) dest = vec;\n        var x = vec[0],\n            y = vec[1];\n        dest[0] = (mat[0] * x) + (mat[1] * y) + mat[4];\n        dest[1] = (mat[2] * x) + (mat[3] * y) + mat[5];\n        return dest;\n    }\n\n    export function transformVec2s(mat: Float32Array, ...vecs: Float32Array[]) {\n        for (var i = vecs.length - 1; i >= 0; i--) {\n            transformVec2(mat, vecs[i]);\n        }\n    }\n\n    export function createTranslate(x: number, y: number, dest?: Float32Array): Float32Array {\n        if (!dest) dest = create();\n        dest[0] = 1;\n        dest[1] = 0;\n        dest[2] = 0;\n        dest[3] = 1;\n        dest[4] = x;\n        dest[5] = y;\n        return dest;\n    }\n\n    export function translate(mat: Float32Array, x: number, y: number): Float32Array {\n        mat[4] += x;\n        mat[5] += y;\n        return mat;\n    }\n\n    export function createScale(sx: number, sy: number, dest?: Float32Array): Float32Array {\n        if (!dest) dest = create();\n        dest[0] = sx;\n        dest[1] = 0;\n        dest[2] = 0;\n        dest[3] = sy;\n        dest[4] = 0;\n        dest[5] = 0;\n        return dest;\n    }\n\n    export function scale(mat: Float32Array, sx: number, sy: number): Float32Array {\n        mat[0] *= sx;\n        mat[2] *= sx;\n        mat[4] *= sx;\n\n        mat[1] *= sy;\n        mat[3] *= sy;\n        mat[5] *= sy;\n        return mat;\n    }\n\n    export function createRotate(angleRad: number, dest?: Float32Array): Float32Array {\n        if (!dest) dest = create();\n        var c = Math.cos(angleRad);\n        var s = Math.sin(angleRad);\n        dest[0] = c;\n        dest[1] = -s;\n        dest[2] = s;\n        dest[3] = c;\n        dest[4] = 0;\n        dest[5] = 0;\n        return dest;\n    }\n\n    export function createSkew(angleRadX: number, angleRadY: number, dest?: Float32Array): Float32Array {\n        if (!dest) dest = create();\n        dest[0] = 1;\n        dest[1] = Math.tan(angleRadX);\n        dest[2] = Math.tan(angleRadY);\n        dest[3] = 1;\n        dest[4] = 0;\n        dest[5] = 0;\n        return dest;\n    }\n\n    export function preapply(dest: Float32Array, mat: Float32Array): Float32Array {\n        return multiply(dest, mat, dest);\n    }\n\n    export function apply(dest: Float32Array, mat: Float32Array): Float32Array {\n        return multiply(mat, dest, dest);\n    }\n\n    function simple_inverse(mat: Float32Array, dest?: Float32Array): Float32Array {\n        var m11 = mat[0];\n        if (Math.abs(m11) < EPSILON)\n            return null;\n\n        var m22 = mat[3];\n        if (Math.abs(m22) < EPSILON)\n            return null;\n\n        if (!dest) {\n            dest = mat;\n        } else {\n            dest[1] = mat[1];\n            dest[2] = mat[2];\n        }\n\n        var x0 = -mat[4];\n        var y0 = -mat[5];\n        if (Math.abs(m11 - 1) > EPSILON) {\n            m11 = 1 / m11;\n            x0 *= m11;\n        }\n        if (Math.abs(m22 - 1) > EPSILON) {\n            m22 = 1 / m22;\n            y0 *= m22;\n        }\n\n        dest[0] = m11;\n        dest[3] = m22;\n        dest[4] = x0;\n        dest[5] = y0;\n        return dest;\n    }\n\n    function complex_inverse(mat: Float32Array, dest?: Float32Array): Float32Array {\n        if (!dest) dest = mat;\n\n        var m11 = mat[0], m12 = mat[1],\n            m21 = mat[2], m22 = mat[3];\n\n        //inv(A) = 1/det(A) * adj(A)\n        var det = m11 * m22 - m12 * m21;\n        if (det === 0 || !isFinite(det))\n            return null;\n        var id = 1 / det;\n\n        var x0 = mat[4], y0 = mat[5];\n\n        dest[0] = m22 * id;\n        dest[1] = -m12 * id;\n        dest[2] = -m21 * id;\n        dest[3] = m11 * id;\n        dest[4] = (m21 * y0 - m22 * x0) * id;\n        dest[5] = (m12 * x0 - m11 * y0) * id;\n        return dest;\n    }\n}","namespace la.vec2 {\n    export function create(x: number, y: number): Float32Array {\n        var dest = new Float32Array(2);\n        dest[0] = x;\n        dest[1] = y;\n        return dest;\n    }\n\n    export function init(x: number, y: number, dest?: Float32Array): Float32Array {\n        if (!dest) dest = new Float32Array(2);\n        dest[0] = x;\n        dest[1] = y;\n        return dest;\n    }\n\n    export function clone(src: Float32Array, dest?: Float32Array): Float32Array {\n        return init(src[0], src[1], dest);\n    }\n\n    export function reverse(src: Float32Array, dest?: Float32Array): Float32Array {\n        if (!dest) dest = src;\n        dest[0] = -src[0];\n        dest[1] = -src[1];\n        return dest;\n    }\n\n    /// Equivalent of rotating 90 degrees clockwise (screen space)\n    export function orthogonal(src: Float32Array, dest?: Float32Array): Float32Array {\n        if (!dest) dest = src;\n        var x = src[0],\n            y = src[1];\n        dest[0] = -y;\n        dest[1] = x;\n        return dest;\n    }\n\n    export function normalize(src: Float32Array, dest?: Float32Array): Float32Array {\n        if (!dest) dest = src;\n        var x = src[0],\n            y = src[1];\n        var len = Math.sqrt(x * x + y * y);\n        dest[0] = x / len;\n        dest[1] = y / len;\n        return dest;\n    }\n\n    /// Rotates a vector(v) by angle(theta) clockwise(screen space) ...which is counter-clockwise in coordinate space\n    export function rotate(src: Float32Array, theta: number, dest?: Float32Array): Float32Array {\n        if (!dest) dest = src;\n        var c = Math.cos(theta);\n        var s = Math.sin(theta);\n        var x = src[0];\n        var y = src[1];\n        dest[0] = x * c - y * s;\n        dest[1] = x * s + y * c;\n        return dest;\n    }\n\n    /// Computes the midpoint between 2 points\n    export function midpoint(p1: Float32Array, p2: Float32Array, dest?: Float32Array): Float32Array {\n        if (!dest) dest = p1;\n        var x1 = p1[0],\n            y1 = p1[1],\n            x2 = p2[0],\n            y2 = p2[1];\n        dest[0] = (x1 + x2) / 2.0;\n        dest[1] = (y1 + y2) / 2.0;\n        return dest;\n    }\n\n    /// Returns smallest angle (in radians) between 2 vectors\n    export function angleBetween(u: Float32Array, v: Float32Array): number {\n        var ux = u[0],\n            uy = u[1],\n            vx = v[0],\n            vy = v[1];\n        var num = ux * vx + uy * vy;\n        var den = Math.sqrt(ux * ux + uy * uy) * Math.sqrt(vx * vx + vy * vy);\n        return Math.acos(num / den);\n    }\n\n    /// By rotating from vector(v1) to vector(v2), tests whether that angle is clockwise (screen space)\n    export function isClockwiseTo(v1: Float32Array, v2: Float32Array): boolean {\n        var theta = angleBetween(v1, v2);\n        var nv1 = normalize(clone(v1));\n        var nv2 = normalize(clone(v2));\n        rotate(nv1, theta);\n        var nx = Math.abs(nv1[0] - nv2[0]);\n        var ny = Math.abs(nv1[1] - nv2[1]);\n        return nx < EPSILON\n            && ny < EPSILON;\n    }\n\n    /// Finds intersection of v1(s1 + t(d1)) and v2(s2 + t(d2))\n    export function intersection(s1: Float32Array, d1: Float32Array, s2: Float32Array, d2: Float32Array): Float32Array {\n        var x1 = s1[0];\n        var y1 = s1[1];\n        var x2 = x1 + d1[0];\n        var y2 = y1 + d1[1];\n\n        var x3 = s2[0];\n        var y3 = s2[1];\n        var x4 = x3 + d2[0];\n        var y4 = y3 + d2[1];\n\n        var det = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n        if (det === 0)\n            return null;\n\n        var xn = ((x1 * y2 - y1 * x2) * (x3 - x4)) - ((x1 - x2) * (x3 * y4 - y3 * x4));\n        var yn = ((x1 * y2 - y1 * x2) * (y3 - y4)) - ((y1 - y2) * (x3 * y4 - y3 * x4));\n        return vec2.create(xn / det, yn / det);\n    }\n}","/// <reference path=\"vec2\" />\n\nnamespace la.rect {\n    export function init(x: number, y: number, width: number, height: number, dest?: IRect): IRect {\n        if (!dest)\n            return {x: x, y: y, width: width, height: height};\n        dest.x = x;\n        dest.y = y;\n        dest.width = width;\n        dest.height = height;\n        return dest;\n    }\n\n    export function copyTo(src: IRect, dest?: IRect): IRect {\n        if (!dest) {\n            return {\n                x: src.x,\n                y: src.y,\n                width: src.width,\n                height: src.height\n            };\n        } else {\n            dest.x = src.x;\n            dest.y = src.y;\n            dest.width = src.width;\n            dest.height = src.height;\n            return dest;\n        }\n    }\n\n    var p1 = vec2.create(0, 0);\n    var p2 = vec2.create(0, 0);\n    var p3 = vec2.create(0, 0);\n    var p4 = vec2.create(0, 0);\n\n    export function transform(src: IRect, transform: Float32Array, dest?: IRect): IRect {\n        if (!transform)\n            return dest;\n        if (!dest)\n            dest = <IRect>{x: 0, y: 0, width: 0, height: 0};\n\n        var x = src.x;\n        var y = src.y;\n        var w = src.width;\n        var h = src.height;\n\n        vec2.init(x, y, p1);\n        vec2.init(x + w, y, p2);\n        vec2.init(x + w, y + h, p3);\n        vec2.init(x, y + h, p4);\n\n        mat3.transformVec2(transform, p1);\n        mat3.transformVec2(transform, p2);\n        mat3.transformVec2(transform, p3);\n        mat3.transformVec2(transform, p4);\n\n        var l = Math.min(p1[0], p2[0], p3[0], p4[0]);\n        var t = Math.min(p1[1], p2[1], p3[1], p4[1]);\n        var r = Math.max(p1[0], p2[0], p3[0], p4[0]);\n        var b = Math.max(p1[1], p2[1], p3[1], p4[1]);\n\n        dest.x = l;\n        dest.y = t;\n        dest.width = r - l;\n        dest.height = b - t;\n        return dest;\n    }\n\n    export function equal(r1: IRect, r2: IRect): boolean {\n        return r1.x === r2.x\n            && r1.y === r2.y\n            && r1.width === r2.width\n            && r1.height === r2.height;\n    }\n\n    export function isEmpty(src: IRect): boolean {\n        return src.width === 0\n            || src.height === 0;\n    }\n\n    // NOTE: If dest is not specified, r1 will be used dest\n    export function union(r1: IRect, r2: IRect, dest?: IRect): IRect {\n        if (!dest) dest = r1;\n        if (r2.width <= 0 || r2.height <= 0)\n            return dest;\n        if (dest.width <= 0 || dest.height <= 0)\n            return rect.copyTo(r2, dest);\n\n        var x1 = r1.x, x2 = r2.x,\n            y1 = r1.y, y2 = r2.y,\n            w1 = r1.width, w2 = r2.width,\n            h1 = r1.height, h2 = r2.height;\n\n        dest.x = Math.min(x1, x2);\n        dest.y = Math.min(y1, y2);\n        dest.width = Math.max(x1 + w1, x2 + w2) - dest.x;\n        dest.height = Math.max(y1 + h1, y2 + h2) - dest.y;\n        return dest;\n    }\n\n    // NOTE: If dest is not specified, r1 will be used dest\n    export function intersection(r1: IRect, r2: IRect, dest?: IRect): IRect {\n        if (!dest) dest = r1;\n        var x = Math.max(r1.x, r2.x);\n        var y = Math.max(r1.y, r2.y);\n        dest.width = Math.max(0, Math.min(r1.x + r1.width, r2.x + r2.width) - x);\n        dest.height = Math.max(0, Math.min(r1.y + r1.height, r2.y + r2.height) - y);\n        dest.x = x;\n        dest.y = y;\n        return dest;\n    }\n\n    export function isContainedIn(src: IRect, test: IRect): boolean {\n        var sl = src.x;\n        var st = src.y;\n        var sr = src.x + src.width;\n        var sb = src.y + src.height;\n\n        var tl = test.x;\n        var tt = test.y;\n        var tr = test.x + test.width;\n        var tb = test.y + test.height;\n\n        if (sl < tl || st < tt || sl > tr || st > tb) //src top-left is outside test\n            return false;\n        if (sr < tl || sb < tt || sr > tr || sb > tb) //src bottom-right is outside test\n            return false;\n        return true;\n    }\n\n    export function containsPoint(rect1: IRect, p: IPoint): boolean {\n        return rect1.x <= p.x\n            && rect1.y <= p.y\n            && (rect1.x + rect1.width) >= p.x\n            && (rect1.y + rect1.height) >= p.y;\n    }\n\n    export function roundOut(dest: IRect) {\n        var x = Math.floor(dest.x);\n        var y = Math.floor(dest.y);\n        dest.width = Math.ceil(dest.x + dest.width) - x;\n        dest.height = Math.ceil(dest.y + dest.height) - y;\n        dest.x = x;\n        dest.y = y;\n    }\n\n    export function roundIn(dest: IRect) {\n        var x = Math.ceil(dest.x);\n        var y = Math.ceil(dest.y);\n        dest.width = Math.floor(dest.x + dest.width) - x;\n        dest.height = Math.floor(dest.y + dest.height) - y;\n        dest.x = x;\n        dest.y = y;\n        return dest;\n    }\n\n}"],"sourceRoot":"/source/"}